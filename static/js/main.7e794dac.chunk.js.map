{"version":3,"sources":["commons/icons/Arrow.tsx","commons/icons/IconColors.tsx","commons/icons/index.tsx","commons/icons/Menu.tsx","components/AppHeader.tsx","components/home/Home.tsx","components/services/Services.tsx","components/projects/Projects.tsx","components/contact/Contact.tsx","components/AppFooter.tsx","components/AppContent.tsx","components/App.tsx","serviceWorker.js","i18n.tsx","index.tsx"],"names":["Arrow","props","className","IconColors","MAIN","DEFAULT","SECONDARY","useIconColor","clazz","color","result","Object","values","find","col","Menu","links","to","id","AppHeaderLink","t","useTranslation","useLocation","pathname","key","AppHeaderMenuLink","AppHeader","useState","showMenu","setShowMenu","lang","setLang","i18n","toggleMenuOff","document","body","removeEventListener","onClick","nextLang","changeLanguage","toUpperCase","map","link","addEventListener","HomePageBackground","src","alt","Home","SERVICES","title","text","image","contains","ServiceSection","Services","service","index","PROJECTS","ProjectSection","even","Projects","project","ContactInput","type","value","disabled","onChange","htmlFor","name","required","ContactTextArea","rows","Contact","setName","email","setEmail","message","setMessage","submitText","setSubmitText","isSending","setIsSending","isSent","setIsSent","isError","setIsError","submitDisabled","Boolean","trim","event","currentTarget","Email","send","SecureToken","To","From","Subject","Body","split","join","then","msg","catch","finally","AppFooter","AppContent","path","App","fallback","window","location","hostname","match","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7e794dac.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Arrow.scss'\r\n\r\ninterface ArrowProps {}\r\n\r\nconst Arrow = (props: ArrowProps) => {\r\n  return (\r\n    <div className='Arrow'>\r\n      <div className='Arrow-elem Arrow-main' />\r\n      <div className='Arrow-elem Arrow-ext1' />\r\n      <div className='Arrow-elem Arrow-ext2' />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Arrow\r\n","const IconColors = {\n  MAIN: 'ap-icon-color-main',\n  DEFAULT: 'ap-icon-color-default',\n  SECONDARY: 'ap-icon-color-secondary'\n}\n\nconst fnUseIconColor = (clazz: string, color?: string) => {\n  let result = Object.values(IconColors).find((col) => col === color) || IconColors.DEFAULT\n  if (clazz) {\n    return `${clazz} ${result}`\n  }\n  return result\n}\n\nexport const useIconColor = fnUseIconColor\nexport const Colors = IconColors\n\nexport default IconColors\n","import ArrowIcon from './Arrow'\nimport MenuIcon from './Menu'\n\nexport const Arrow = ArrowIcon\nexport const Menu = MenuIcon\n","import React from 'react'\r\nimport { useIconColor } from './IconColors'\r\nimport './Menu.scss'\r\n\r\ninterface MenuProps {\r\n  color?: string\r\n}\r\n\r\nconst Menu = (props: MenuProps) => {\r\n  const className = useIconColor('Menu', props.color)\r\n  return (\r\n    <div className={className}>\r\n      <div className='Menu-bar Menu-bar-top' />\r\n      <div className='Menu-bar Menu-bar-mid' />\r\n      <div className='Menu-bar Menu-bar-bot' />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React, { useState } from 'react'\r\nimport { Link, useLocation} from 'react-router-dom'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport { Menu } from '../commons/icons'\r\n\r\nimport './AppHeader.scss'\r\n\r\ninterface AppHeaderLink {\r\n  to: string,\r\n  id: string\r\n}\r\n\r\ninterface AppHeaderProps {}\r\n\r\nconst links = [\r\n  { to: '/', id: 'home' },\r\n  { to: '/services', id: 'services' },\r\n  { to: '/projects', id: 'projects' },\r\n  { to: '/contact', id: 'contact' }\r\n]\r\n\r\nconst AppHeader = (props: AppHeaderProps) => {\r\n  /* HOOKS */\r\n  const [showMenu, setShowMenu] = useState(false)\r\n  const [lang, setLang] = useState('fr')\r\n  const { t, i18n } = useTranslation()\r\n\r\n  /* CALLBACKS */\r\n  const toggleMenuOff = () => {\r\n    document.body.removeEventListener('click', toggleMenuOff)\r\n    setShowMenu(false)\r\n  }\r\n\r\n  const onLangPressed = () => {\r\n    let nextLang = lang === 'fr' ? 'en' : 'fr'\r\n    setLang(nextLang)\r\n    i18n.changeLanguage(nextLang)\r\n  }\r\n\r\n  const onMenuPressed = () => {\r\n    document.body.removeEventListener('click', toggleMenuOff)\r\n    if (!showMenu) {\r\n      document.body.addEventListener('click', toggleMenuOff)\r\n      setShowMenu(true)\r\n    }\r\n  }\r\n\r\n  /* RENDERING */\r\n\r\n  return (\r\n    <header\r\n      className='AppHeader'>\r\n      <div\r\n        className='AppHeader-area'>\r\n        <button\r\n          className='AppHeader-item AppHeader-item-lang'\r\n          onClick={onLangPressed}>\r\n          {lang.toUpperCase()}\r\n        </button>\r\n        <div\r\n          className='AppHeader-item'>\r\n          <Link\r\n            className='AppHeader-link'\r\n            to='/'>\r\n            {t('app.header.title')}\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className='AppHeader-links'>\r\n        { links.map((link) => <AppHeaderLink key={link.to} {...link} />) }\r\n      </div>\r\n      <div className='AppHeader-menu-btn-container'>\r\n        <button\r\n          className='AppHeader-menu-btn'\r\n          onClick={onMenuPressed}>\r\n          <Menu />\r\n        </button>\r\n        <div className={showMenu ? 'AppHeader-menu-btn-mask' : ''} />\r\n      </div>\r\n      <div\r\n        className={showMenu ? 'AppHeader-menu AppHeader-menu-show' : 'AppHeader-menu'}>\r\n        <ul\r\n          className='AppHeader-menu-list'>\r\n          { links.map((link) => <AppHeaderMenuLink key={link.to} {...link} />) }\r\n        </ul>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nfunction AppHeaderLink(props: AppHeaderLink) {\r\n  const { t } = useTranslation()\r\n  const {\r\n    to,\r\n    id\r\n  } = props\r\n  let className = 'AppHeader-link'\r\n  const location = useLocation()\r\n  if (location.pathname === to) {\r\n    className += ' AppHeader-link-active'\r\n  }\r\n  return (\r\n    <div\r\n      key={to}\r\n      className='AppHeader-item'>\r\n      <Link\r\n        className={className}\r\n        to={to}>\r\n        {t(`app.header.links.${id}`)}\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction AppHeaderMenuLink(props: AppHeaderLink) {\r\n  const { t } = useTranslation()\r\n  const {\r\n    to,\r\n    id\r\n  } = props\r\n  let className = 'AppHeader-menu-link'\r\n  const location = useLocation()\r\n  if (location.pathname === to) {\r\n    className += ' AppHeader-menu-link-active'\r\n  }\r\n  return (\r\n    <li\r\n      key={to}\r\n      className='AppHeader-menu-item'>\r\n      <Link\r\n        className={className}\r\n        to={to}>\r\n        {t(`app.header.links.${id}`)}\r\n      </Link>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default AppHeader\r\n","import React from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport Arrow from '../../commons/icons/Arrow'\r\nimport './Home.scss'\r\n\r\ninterface HomeProps {}\r\n\r\ninterface HomePageBackground {\r\n  src: string\r\n}\r\n\r\nconst Home = (props: HomeProps) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <div className='Home'>\r\n      <div className='Home-page'>\r\n        <HomePageBackground src='https://github.com/bullepouzoulet/bullepouzoulet.github.io/blob/master/background.jpg?raw=true' />\r\n        <div className='Home-page-content'>\r\n          <h1 className='Home-page-main-title'>{t('app.header.title')}</h1>\r\n          <h2>{t('home.section1.title')}</h2>\r\n          <h3>{t('home.section1.subtitle')}</h3>\r\n          <div className='Home-page-bottom'>\r\n            <Arrow />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='Home-page Home-page-small'>\r\n        <div className='Home-page-content'>\r\n          <h2>{t('home.section2.title')}</h2>\r\n          <p>{t('home.section2.text')}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='Home-page Home-page-small'>\r\n        <div className='Home-page-content'>\r\n          <HomePageBackground src='https://github.com/bullepouzoulet/bullepouzoulet.github.io/blob/master/background2.jpg?raw=true' />\r\n          <h2>{t('home.section3.title')}</h2>\r\n          <p>{t('home.section3.text')}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='Home-page Home-page-small'>\r\n        <div className='Home-page-content'>\r\n        <h2>{t('home.section4.title')}</h2>\r\n          <p>{t('home.section4.text')}</p>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction HomePageBackground(props: HomePageBackground) {\r\n  const {\r\n    src\r\n  } = props\r\n  return (\r\n    <div\r\n      className='Home-page-background-container'>\r\n      <img\r\n        className='Home-page-background'\r\n        alt=''\r\n        src={src} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport './Services.scss'\r\n\r\nconst SERVICES = [\r\n  {\r\n    title: 'services.service1.title',\r\n    text: 'services.service1.text',\r\n    image: 'https://github.com/bullepouzoulet/bullepouzoulet.github.io/blob/master/background3.jpg?raw=true',\r\n    contains: false\r\n  },\r\n  {\r\n    title: 'services.service2.title',\r\n    text: 'services.service2.text',\r\n    image: 'https://github.com/bullepouzoulet/bullepouzoulet.github.io/blob/master/background.jpg?raw=true',\r\n    contains: false\r\n  },\r\n  {\r\n    title: 'services.service3.title',\r\n    text: 'services.service3.text',\r\n    image: 'https://github.com/bullepouzoulet/bullepouzoulet.github.io/blob/master/process.png?raw=true',\r\n    contains: true\r\n  }\r\n]\r\n\r\ninterface ServicesProps {}\r\n\r\nconst Services = (props: ServicesProps) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <div className='Services'>\r\n      <h1>{t('services.title')}</h1>\r\n      <div className='Services-sections'>\r\n        { SERVICES.map((service, index) => <ServiceSection key={`service-${index}`} {...service} />)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface ServiceSectionProps {\r\n  title: string,\r\n  text: string,\r\n  image: string,\r\n  contains: boolean\r\n}\r\n\r\nconst ServiceSection = (props: ServiceSectionProps) => {\r\n  const {\r\n    title,\r\n    text,\r\n    image,\r\n    contains\r\n  } = props\r\n\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <div className='ServiceSection'>\r\n      <div className='ServiceSection-area-background'>\r\n        <img\r\n          alt='<project>'\r\n          className={`ServiceSection-image${contains ? ' contains' : ''}`}\r\n          src={image}\r\n        />\r\n      </div>\r\n      <div className='ServiceSection-area-text'>\r\n        <h2 className='ServiceSection-text-title'>\r\n          {t(title)}\r\n        </h2>\r\n        <p className='ServiceSection-text-content'>\r\n          {t(text)}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Services\r\n","import React from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport './Projects.scss'\r\n\r\nconst PROJECTS = [\r\n  {\r\n    title: 'projects.project1.title',\r\n    text: 'projects.project1.text',\r\n    image: 'https://github.com/bullepouzoulet/bullepouzoulet.github.io/blob/master/background3.jpg?raw=true'\r\n  },\r\n  {\r\n    title: 'projects.project2.title',\r\n    text: 'projects.project2.text',\r\n    image: 'https://github.com/bullepouzoulet/bullepouzoulet.github.io/blob/master/background2.jpg?raw=true'\r\n  },\r\n  {\r\n    title: 'projects.project3.title',\r\n    text: 'projects.project3.text',\r\n    image: 'https://github.com/bullepouzoulet/bullepouzoulet.github.io/blob/master/background4.jpg?raw=true'\r\n  }\r\n]\r\n\r\ninterface ProjectsProps {}\r\n\r\nconst Projects = (props: ProjectsProps) => {\r\n  return (\r\n    <div className='Projects'>\r\n      { PROJECTS.map((project, index) => <ProjectSection key={`project-${index}`} {...project} even={index % 2 !== 0} />)}\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface ProjectSectionProps {\r\n  title: string,\r\n  text: string,\r\n  image: string,\r\n  even: boolean\r\n}\r\n\r\nconst ProjectSection = (props: ProjectSectionProps) => {\r\n  const {\r\n    title,\r\n    text,\r\n    image,\r\n    even\r\n  } = props\r\n\r\n  const { t } = useTranslation()\r\n  const className = `ProjectSection${even ? ' ProjectSection-even' : ''}`\r\n\r\n  return (\r\n    <div className={className}>\r\n      <div className='ProjectSection-area ProjectSection-text'>\r\n        <h2 className='ProjectSection-text-title'>\r\n          {t(title)}\r\n        </h2>\r\n        <p className='ProjectSection-text-content'>\r\n          {t(text)}\r\n        </p>\r\n      </div>\r\n      <div className='ProjectSection-area ProjectSection-background'>\r\n        <img\r\n          alt='<project>'\r\n          className='ProjectSection-image'\r\n          src={image}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Projects\r\n","import React, { useState } from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport './Contact.scss'\r\n\r\ndeclare var Email: any\r\n\r\ninterface ContactProps {}\r\n\r\nconst Contact = (props: ContactProps) => {\r\n  const { t } = useTranslation()\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [message, setMessage] = useState('')\r\n  const [submitText, setSubmitText] = useState(t('contact.submit'))\r\n  const [isSending, setIsSending] = useState(false)\r\n  const [isSent, setIsSent] = useState(false)\r\n  const [isError, setIsError] = useState(false)\r\n\r\n  const handleNameChanged = (event: React.FormEvent<HTMLInputElement>) => {\r\n    setName(event.currentTarget.value)\r\n  }\r\n\r\n  const handleEmailChanged = (event: React.FormEvent<HTMLInputElement>) => {\r\n    setEmail(event.currentTarget.value)\r\n  }\r\n\r\n  const handleMessageChanged = (event: React.FormEvent<HTMLTextAreaElement>) => {\r\n    setMessage(event.currentTarget.value)\r\n  }\r\n\r\n  const onSendMailPressed = () => {\r\n    setIsSending(true)\r\n    setSubmitText(t('contact.sending'))\r\n    Email.send({\r\n      SecureToken : \"ff1161a1-4f82-4b6c-8629-fcb9b0b09e72\",\r\n      To: 'bulle.pzt@gmail.com',\r\n      From: 'ash.uncover@gmail.com',\r\n      Subject: `Contact Site: ${name}`,\r\n      Body: `<div><div>Nom: ${name}</div><div>Email: ${email}</div><br /><div>${message.split('\\n').join('<br />')}</div></div>`\r\n    })\r\n      .then((msg: string) => {\r\n        if (msg === 'OK') {\r\n          setIsError(false)\r\n          setIsSent(true)\r\n          setSubmitText(t('contact.sent'))\r\n        } else {\r\n          setIsError(true)\r\n          setSubmitText(t('contact.error'))\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setIsError(true)\r\n        setSubmitText(t('contact.error'))\r\n      })\r\n      .finally(() => {\r\n        setIsSending(false)\r\n      })\r\n\r\n  }\r\n\r\n  const submitDisabled = !Boolean(name.trim()) || !Boolean(email.trim()) || !Boolean(message.trim())\r\n  return (\r\n    <div className='Contact'>\r\n      <h3\r\n        className='Contact-title'>\r\n        {t('contact.title')}\r\n      </h3>\r\n\r\n      <div\r\n        className='Contact-content'>\r\n\r\n        <ContactInput\r\n          id='name'\r\n          type='text'\r\n          text={t('contact.name')}\r\n          value={name}\r\n          disabled={isSending || isSent}\r\n          onChange={handleNameChanged}\r\n        />\r\n\r\n        <ContactInput\r\n          id='email'\r\n          type='email'\r\n          text={t('contact.email')}\r\n          value={email}\r\n          disabled={isSending || isSent}\r\n          onChange={handleEmailChanged}\r\n        />\r\n\r\n        <ContactTextArea\r\n          id='message'\r\n          text={t('contact.message')}\r\n          value={message}\r\n          disabled={isSending || isSent}\r\n          onChange={handleMessageChanged}\r\n        />\r\n\r\n      </div>\r\n\r\n      <button\r\n        className={isSent ? 'Contact-btn Contact-btn-sent' : (isError ? 'Contact-btn Contact-btn-error' : 'Contact-btn')}\r\n        disabled={submitDisabled || isSending || isSent}\r\n        onClick={onSendMailPressed}>\r\n        {submitText}\r\n      </button>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface ContactInputProps {\r\n  type: string,\r\n  value: string,\r\n  text: string,\r\n  id: string,\r\n  disabled: boolean,\r\n  onChange: (event: React.FormEvent<HTMLInputElement>) => void\r\n}\r\n\r\nfunction ContactInput(props: ContactInputProps) {\r\n  const {\r\n    id,\r\n    type,\r\n    text,\r\n    value,\r\n    disabled,\r\n    onChange\r\n  } = props\r\n  return (\r\n    <div\r\n      className='Contact-form'>\r\n      <label\r\n        className='Contact-label'\r\n        htmlFor={id}>\r\n        {text}\r\n      </label>\r\n      <input\r\n        className='Contact-input'\r\n        type={type}\r\n        id={id}\r\n        name={id}\r\n        value={value}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n        required>\r\n      </input>\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface ContactTextAreaProps {\r\n  value: string,\r\n  text: string,\r\n  id: string,\r\n  disabled: boolean,\r\n  onChange: (event: React.FormEvent<HTMLTextAreaElement>) => void\r\n}\r\n\r\nfunction ContactTextArea(props: ContactTextAreaProps) {\r\n  const {\r\n    id,\r\n    text,\r\n    value,\r\n    disabled,\r\n    onChange\r\n  } = props\r\n  return (\r\n    <div\r\n      className='Contact-form'>\r\n      <label\r\n        className='Contact-label'\r\n        htmlFor={id}>\r\n        {text}\r\n      </label>\r\n      <textarea\r\n        className='Contact-textarea'\r\n        id={id}\r\n        name={id}\r\n        value={value}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n        rows={5}\r\n        required>\r\n      </textarea>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Contact\r\n","import React from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport './AppFooter.scss'\r\n\r\ninterface AppFooterProps {}\r\n\r\nconst AppFooter = (props: AppFooterProps) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <div className='AppFooter'>\r\n      <div>\r\n        {t('footer.title')}\r\n      </div>\r\n      <div>\r\n        {t('footer.legal')}\r\n      </div>\r\n      <div>\r\n        {t('footer.copyright')}\r\n      </div>\r\n      <div>\r\n        {t('footer.bulle')}\r\n      </div>\r\n      <div>\r\n        {t('footer.site')}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppFooter\r\n","import React from 'react'\r\nimport {\r\n  Switch,\r\n  Route\r\n} from 'react-router-dom'\r\n\r\nimport Home from './home/Home'\r\nimport Services from './services/Services'\r\nimport Projects from './projects/Projects'\r\nimport Contact from './contact/Contact'\r\nimport AppFooter from './AppFooter'\r\n\r\nimport './AppContent.scss'\r\n\r\ninterface AppContentProps {}\r\n\r\nconst AppContent = (props: AppContentProps) => {\r\n  return (\r\n    <div className='AppContent'>\r\n      <Switch>\r\n        <Route path='/services'>\r\n          <Services />\r\n        </Route>\r\n        <Route path='/projects'>\r\n          <Projects />\r\n        </Route>\r\n        <Route path='/contact'>\r\n          <Contact />\r\n        </Route>\r\n        <Route path='/'>\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n      <AppFooter />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppContent\r\n","import React, { Suspense } from 'react'\r\nimport {\r\n  HashRouter as Router\r\n} from 'react-router-dom'\r\n\r\nimport AppHeader from './AppHeader'\r\nimport AppContent from './AppContent'\r\n\r\nimport './App.scss'\r\n\r\ninterface AppProps {}\r\n\r\nconst App = (props: AppProps) => {\r\n  return (\r\n    <Suspense fallback=\"loading\">\r\n      <Router>\r\n        <div className='App'>\r\n          <AppHeader />\r\n          <AppContent />\r\n        </div>\r\n      </Router>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default App\r\n","/* globals fetch */\r\n\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register (config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import i18n from 'i18next'\r\nimport { initReactI18next } from 'react-i18next'\r\n\r\nimport Backend from 'i18next-xhr-backend'\r\nimport LanguageDetector from 'i18next-browser-languagedetector'\r\n\r\ni18n\r\n  .use(Backend)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    fallbackLng: 'fr',\r\n    debug: false,\r\n    interpolation: {\r\n      escapeValue: false,\r\n    }\r\n  })\r\n\r\nexport default i18n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.scss'\r\nimport App from './components/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nimport './i18n'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}