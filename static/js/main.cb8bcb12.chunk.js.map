{"version":3,"sources":["commons/icons/Menu.tsx","components/AppHeader.tsx","commons/icons/Arrow.tsx","components/home/Home.tsx","components/services/Services.tsx","components/projects/Projects.tsx","components/contact/Contact.tsx","components/AppFooter.tsx","components/AppContent.tsx","components/App.tsx","serviceWorker.js","i18n.tsx","index.tsx"],"names":["Menu","props","className","links","to","id","AppHeaderLink","t","useTranslation","useLocation","pathname","key","AppHeaderMenuLink","AppHeader","useState","showMenu","setShowMenu","lang","setLang","i18n","toggleMenuOff","document","body","removeEventListener","onClick","nextLang","changeLanguage","toUpperCase","map","link","addEventListener","Arrow","HomePageBackground","src","alt","Home","Services","PROJECTS","title","text","image","ProjectSection","even","Projects","project","index","ContactInput","type","value","disabled","onChange","htmlFor","name","required","ContactTextArea","rows","Contact","setName","email","setEmail","message","setMessage","submitText","setSubmitText","isSending","setIsSending","isSent","setIsSent","isError","setIsError","submitDisabled","Boolean","trim","event","currentTarget","Email","send","SecureToken","To","From","Subject","Body","split","join","then","msg","catch","finally","AppFooter","AppContent","path","App","fallback","window","location","hostname","match","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cb8bcb12.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Menu.scss'\r\n\r\ninterface MenuProps {}\r\n\r\nconst Menu = (props: MenuProps) => {\r\n  return (\r\n    <div className='Menu'>\r\n      <div className='Menu-bar Menu-bar-top' />\r\n      <div className='Menu-bar Menu-bar-mid' />\r\n      <div className='Menu-bar Menu-bar-bot' />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React, { useState } from 'react'\r\nimport { Link, useLocation} from 'react-router-dom'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport Menu from '../commons/icons/Menu'\r\n\r\nimport './AppHeader.scss'\r\n\r\ninterface AppHeaderLink {\r\n  to: string,\r\n  id: string\r\n}\r\n\r\ninterface AppHeaderProps {}\r\n\r\nconst links = [\r\n  { to: '/', id: 'home' },\r\n  { to: '/services', id: 'services' },\r\n  { to: '/projects', id: 'projects' },\r\n  { to: '/contact', id: 'contact' }\r\n]\r\n\r\nconst AppHeader = (props: AppHeaderProps) => {\r\n  /* HOOKS */\r\n  const [showMenu, setShowMenu] = useState(false)\r\n  const [lang, setLang] = useState('fr')\r\n  const { t, i18n } = useTranslation()\r\n\r\n  /* CALLBACKS */\r\n  const toggleMenuOff = () => {\r\n    document.body.removeEventListener('click', toggleMenuOff)\r\n    setShowMenu(false)\r\n  }\r\n\r\n  const onLangPressed = () => {\r\n    let nextLang = lang === 'fr' ? 'en' : 'fr'\r\n    setLang(nextLang)\r\n    i18n.changeLanguage(nextLang)\r\n  }\r\n\r\n  const onMenuPressed = () => {\r\n    document.body.removeEventListener('click', toggleMenuOff)\r\n    if (!showMenu) {\r\n      document.body.addEventListener('click', toggleMenuOff)\r\n      setShowMenu(true)\r\n    }\r\n  }\r\n\r\n  /* RENDERING */\r\n  return (\r\n    <header\r\n      className='AppHeader'>\r\n      <div\r\n        className='AppHeader-area'>\r\n        <button\r\n          className='AppHeader-item AppHeader-item-lang'\r\n          onClick={onLangPressed}>\r\n          {lang.toUpperCase()}\r\n        </button>\r\n        <div\r\n          className='AppHeader-item'>\r\n          <Link\r\n            className='AppHeader-link'\r\n            to='/'>\r\n            {t('app.header.title')}\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className='AppHeader-links'>\r\n        { links.map((link) => <AppHeaderLink key={link.to} {...link} />) }\r\n      </div>\r\n      <div className='AppHeader-menu-btn-container'>\r\n        <button\r\n          className='AppHeader-menu-btn'\r\n          onClick={onMenuPressed}>\r\n          <Menu />\r\n        </button>\r\n        <div className={showMenu ? 'AppHeader-menu-btn-mask' : ''} />\r\n      </div>\r\n      <div\r\n        className={showMenu ? 'AppHeader-menu AppHeader-menu-show' : 'AppHeader-menu'}>\r\n        <ul\r\n          className='AppHeader-menu-list'>\r\n          { links.map((link) => <AppHeaderMenuLink key={link.to} {...link} />) }\r\n        </ul>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nfunction AppHeaderLink(props: AppHeaderLink) {\r\n  const { t } = useTranslation()\r\n  const {\r\n    to,\r\n    id\r\n  } = props\r\n  let className = 'AppHeader-link'\r\n  const location = useLocation()\r\n  if (location.pathname === to) {\r\n    className += ' AppHeader-link-active'\r\n  }\r\n  return (\r\n    <div\r\n      key={to}\r\n      className='AppHeader-item'>\r\n      <Link\r\n        className={className}\r\n        to={to}>\r\n        {t(`app.header.links.${id}`)}\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction AppHeaderMenuLink(props: AppHeaderLink) {\r\n  const { t } = useTranslation()\r\n  const {\r\n    to,\r\n    id\r\n  } = props\r\n  let className = 'AppHeader-menu-link'\r\n  const location = useLocation()\r\n  if (location.pathname === to) {\r\n    className += ' AppHeader-menu-link-active'\r\n  }\r\n  return (\r\n    <li\r\n      key={to}\r\n      className='AppHeader-menu-item'>\r\n      <Link\r\n        className={className}\r\n        to={to}>\r\n        {t(`app.header.links.${id}`)}\r\n      </Link>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default AppHeader\r\n","import React from 'react'\r\nimport './Arrow.scss'\r\n\r\ninterface ArrowProps {}\r\n\r\nconst Arrow = (props: ArrowProps) => {\r\n  return (\r\n    <div className='Arrow'>\r\n      <div className='Arrow-elem Arrow-main' />\r\n      <div className='Arrow-elem Arrow-ext1' />\r\n      <div className='Arrow-elem Arrow-ext2' />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Arrow\r\n","import React from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport Arrow from '../../commons/icons/Arrow'\r\nimport './Home.scss'\r\n\r\ninterface HomeProps {}\r\n\r\ninterface HomePageBackground {\r\n  src: string\r\n}\r\n\r\nconst Home = (props: HomeProps) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <div className='Home'>\r\n      <div className='Home-page'>\r\n        <HomePageBackground src='https://github.com/bullepouzoulet/bullepouzoulet.github.io/blob/master/background.jpg?raw=true' />\r\n        <div className='Home-page-content'>\r\n          <h1 className='Home-page-main-title'>{t('app.header.title')}</h1>\r\n          <h2>{t('home.section1.title')}</h2>\r\n          <h3>{t('home.section1.subtitle')}</h3>\r\n          <div className='Home-page-bottom'>\r\n            <Arrow />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='Home-page Home-page-small'>\r\n        <div className='Home-page-content'>\r\n          <h2>{t('home.section2.title')}</h2>\r\n          <p>{t('home.section2.text')}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='Home-page Home-page-small'>\r\n        <div className='Home-page-content'>\r\n          <HomePageBackground src='https://github.com/bullepouzoulet/bullepouzoulet.github.io/blob/master/background2.jpg?raw=true' />\r\n          <h2>{t('home.section3.title')}</h2>\r\n          <p>{t('home.section3.text')}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='Home-page Home-page-small'>\r\n        <div className='Home-page-content'>\r\n        <h2>{t('home.section4.title')}</h2>\r\n          <p>{t('home.section4.text')}</p>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction HomePageBackground(props: HomePageBackground) {\r\n  const {\r\n    src\r\n  } = props\r\n  return (\r\n    <div\r\n      className='Home-page-background-container'>\r\n      <img\r\n        className='Home-page-background'\r\n        alt=''\r\n        src={src} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport './Services.scss'\r\n\r\ninterface ServicesProps {}\r\n\r\nconst Services = (props: ServicesProps) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <div className='Services'>\r\n      <h1>{t('services.title')}</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Services\r\n","import React from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport './Projects.scss'\r\n\r\nconst PROJECTS = [\r\n  {\r\n    title: 'projects.project1.title',\r\n    text: 'projects.project1.text',\r\n    image: 'https://github.com/bullepouzoulet/bullepouzoulet.github.io/blob/master/background3.jpg?raw=true'\r\n  },\r\n  {\r\n    title: 'projects.project2.title',\r\n    text: 'projects.project2.text',\r\n    image: 'https://github.com/bullepouzoulet/bullepouzoulet.github.io/blob/master/background2.jpg?raw=true'\r\n  },\r\n  {\r\n    title: 'projects.project3.title',\r\n    text: 'projects.project3.text',\r\n    image: 'https://github.com/bullepouzoulet/bullepouzoulet.github.io/blob/master/background4.jpg?raw=true'\r\n  }\r\n]\r\n\r\ninterface ProjectsProps {}\r\n\r\nconst Projects = (props: ProjectsProps) => {\r\n  return (\r\n    <div className='Projects'>\r\n      { PROJECTS.map((project, index) => <ProjectSection key={`project-${index}`} {...project} even={index % 2 !== 0} />)}\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface ProjectSectionProps {\r\n  title: string,\r\n  text: string,\r\n  image: string,\r\n  even: boolean\r\n}\r\n\r\nconst ProjectSection = (props: ProjectSectionProps) => {\r\n  const {\r\n    title,\r\n    text,\r\n    image,\r\n    even\r\n  } = props\r\n\r\n  const { t } = useTranslation()\r\n  const className = `ProjectSection${even ? ' ProjectSection-even' : ''}`\r\n\r\n  return (\r\n    <div className={className}>\r\n      <div className='ProjectSection-area ProjectSection-text'>\r\n        <h2 className='ProjectSection-text-title'>\r\n          {t(title)}\r\n        </h2>\r\n        <p className='ProjectSection-text-content'>\r\n          {t(text)}\r\n        </p>\r\n      </div>\r\n      <div className='ProjectSection-area ProjectSection-background'>\r\n        <img\r\n          alt='<project>'\r\n          className='ProjectSection-image'\r\n          src={image}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Projects\r\n","import React, { useState } from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport './Contact.scss'\r\n\r\ndeclare var Email: any\r\n\r\ninterface ContactProps {}\r\n\r\nconst Contact = (props: ContactProps) => {\r\n  const { t } = useTranslation()\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [message, setMessage] = useState('')\r\n  const [submitText, setSubmitText] = useState(t('contact.submit'))\r\n  const [isSending, setIsSending] = useState(false)\r\n  const [isSent, setIsSent] = useState(false)\r\n  const [isError, setIsError] = useState(false)\r\n\r\n  const handleNameChanged = (event: React.FormEvent<HTMLInputElement>) => {\r\n    setName(event.currentTarget.value)\r\n  }\r\n\r\n  const handleEmailChanged = (event: React.FormEvent<HTMLInputElement>) => {\r\n    setEmail(event.currentTarget.value)\r\n  }\r\n\r\n  const handleMessageChanged = (event: React.FormEvent<HTMLTextAreaElement>) => {\r\n    setMessage(event.currentTarget.value)\r\n  }\r\n\r\n  const onSendMailPressed = () => {\r\n    setIsSending(true)\r\n    setSubmitText(t('contact.sending'))\r\n    Email.send({\r\n      SecureToken : \"ff1161a1-4f82-4b6c-8629-fcb9b0b09e72\",\r\n      To: 'bulle.pzt@gmail.com',\r\n      From: 'ash.uncover@gmail.com',\r\n      Subject: `Contact Site: ${name}`,\r\n      Body: `<div><div>Nom: ${name}</div><div>Email: ${email}</div><br /><div>${message.split('\\n').join('<br />')}</div></div>`\r\n    })\r\n      .then((msg: string) => {\r\n        if (msg === 'OK') {\r\n          setIsError(false)\r\n          setIsSent(true)\r\n          setSubmitText(t('contact.sent'))\r\n        } else {\r\n          setIsError(true)\r\n          setSubmitText(t('contact.error'))\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setIsError(true)\r\n        setSubmitText(t('contact.error'))\r\n      })\r\n      .finally(() => {\r\n        setIsSending(false)\r\n      })\r\n\r\n  }\r\n\r\n  const submitDisabled = !Boolean(name.trim()) || !Boolean(email.trim()) || !Boolean(message.trim())\r\n  return (\r\n    <div className='Contact'>\r\n      <h3\r\n        className='Contact-title'>\r\n        {t('contact.title')}\r\n      </h3>\r\n\r\n      <div\r\n        className='Contact-content'>\r\n\r\n        <ContactInput\r\n          id='name'\r\n          type='text'\r\n          text={t('contact.name')}\r\n          value={name}\r\n          disabled={isSending || isSent}\r\n          onChange={handleNameChanged}\r\n        />\r\n\r\n        <ContactInput\r\n          id='email'\r\n          type='email'\r\n          text={t('contact.email')}\r\n          value={email}\r\n          disabled={isSending || isSent}\r\n          onChange={handleEmailChanged}\r\n        />\r\n\r\n        <ContactTextArea\r\n          id='message'\r\n          text={t('contact.message')}\r\n          value={message}\r\n          disabled={isSending || isSent}\r\n          onChange={handleMessageChanged}\r\n        />\r\n\r\n      </div>\r\n\r\n      <button\r\n        className={isSent ? 'Contact-btn Contact-btn-sent' : (isError ? 'Contact-btn Contact-btn-error' : 'Contact-btn')}\r\n        disabled={submitDisabled || isSending || isSent}\r\n        onClick={onSendMailPressed}>\r\n        {submitText}\r\n      </button>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface ContactInputProps {\r\n  type: string,\r\n  value: string,\r\n  text: string,\r\n  id: string,\r\n  disabled: boolean,\r\n  onChange: (event: React.FormEvent<HTMLInputElement>) => void\r\n}\r\n\r\nfunction ContactInput(props: ContactInputProps) {\r\n  const {\r\n    id,\r\n    type,\r\n    text,\r\n    value,\r\n    disabled,\r\n    onChange\r\n  } = props\r\n  return (\r\n    <div\r\n      className='Contact-form'>\r\n      <label\r\n        className='Contact-label'\r\n        htmlFor={id}>\r\n        {text}\r\n      </label>\r\n      <input\r\n        className='Contact-input'\r\n        type={type}\r\n        id={id}\r\n        name={id}\r\n        value={value}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n        required>\r\n      </input>\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface ContactTextAreaProps {\r\n  value: string,\r\n  text: string,\r\n  id: string,\r\n  disabled: boolean,\r\n  onChange: (event: React.FormEvent<HTMLTextAreaElement>) => void\r\n}\r\n\r\nfunction ContactTextArea(props: ContactTextAreaProps) {\r\n  const {\r\n    id,\r\n    text,\r\n    value,\r\n    disabled,\r\n    onChange\r\n  } = props\r\n  return (\r\n    <div\r\n      className='Contact-form'>\r\n      <label\r\n        className='Contact-label'\r\n        htmlFor={id}>\r\n        {text}\r\n      </label>\r\n      <textarea\r\n        className='Contact-textarea'\r\n        id={id}\r\n        name={id}\r\n        value={value}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n        rows={5}\r\n        required>\r\n      </textarea>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Contact\r\n","import React from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport './AppFooter.scss'\r\n\r\ninterface AppFooterProps {}\r\n\r\nconst AppFooter = (props: AppFooterProps) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <div className='AppFooter'>\r\n      {t('footer.title')}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppFooter\r\n","import React from 'react'\r\nimport {\r\n  Switch,\r\n  Route\r\n} from 'react-router-dom'\r\n\r\nimport Home from './home/Home'\r\nimport Services from './services/Services'\r\nimport Projects from './projects/Projects'\r\nimport Contact from './contact/Contact'\r\nimport AppFooter from './AppFooter'\r\n\r\nimport './AppContent.scss'\r\n\r\ninterface AppContentProps {}\r\n\r\nconst AppContent = (props: AppContentProps) => {\r\n  return (\r\n    <div className='AppContent'>\r\n      <Switch>\r\n        <Route path='/services'>\r\n          <Services />\r\n        </Route>\r\n        <Route path='/projects'>\r\n          <Projects />\r\n        </Route>\r\n        <Route path='/contact'>\r\n          <Contact />\r\n        </Route>\r\n        <Route path='/'>\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n      <AppFooter />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppContent\r\n","import React, { Suspense } from 'react'\nimport {\n  HashRouter as Router\n} from 'react-router-dom'\n\nimport AppHeader from './AppHeader'\nimport AppContent from './AppContent'\n\nimport './App.scss'\n\ninterface AppProps {}\n\nconst App = (props: AppProps) => {\n  return (\n    <Suspense fallback=\"loading\">\n      <Router>\n        <div className='App'>\n          <AppHeader />\n          <AppContent />\n        </div>\n      </Router>\n    </Suspense>\n  )\n}\n\nexport default App\n","/* globals fetch */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import i18n from 'i18next'\r\nimport { initReactI18next } from 'react-i18next'\r\n\r\nimport Backend from 'i18next-xhr-backend'\r\nimport LanguageDetector from 'i18next-browser-languagedetector'\r\n\r\ni18n\r\n  .use(Backend)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    fallbackLng: 'fr',\r\n    debug: false,\r\n    interpolation: {\r\n      escapeValue: false,\r\n    }\r\n  })\r\n\r\nexport default i18n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nimport './i18n'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}