{"version":3,"sources":["commons/icons/Menu.tsx","components/AppHeader.tsx","commons/icons/Arrow.tsx","components/home/Home.tsx","components/services/Services.tsx","components/projects/Projects.tsx","components/contact/Contact.tsx","components/AppContent.tsx","components/App.tsx","serviceWorker.js","index.tsx"],"names":["Menu","props","className","AppHeaderLink","to","text","useLocation","pathname","key","AppHeaderMenuLink","AppHeader","useState","showMenu","setShowMenu","toggleMenuOff","document","body","removeEventListener","links","map","link","onClick","addEventListener","Arrow","HomePageBackground","src","alt","Home","Services","Projects","ContactInput","id","type","value","onChange","htmlFor","name","required","ContactTextArea","rows","Contact","setName","email","setEmail","message","setMessage","submitDisabled","Boolean","trim","event","currentTarget","disabled","AppContent","path","App","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7f7f61f7.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Menu.scss'\r\n\r\ninterface MenuProps {}\r\ninterface MenuState {}\r\n\r\nconst Menu = (props: MenuProps) => {\r\n  return (\r\n    <div className='Menu'>\r\n      <div className='Menu-bar Menu-bar-top' />\r\n      <div className='Menu-bar Menu-bar-mid' />\r\n      <div className='Menu-bar Menu-bar-bot' />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React, { useState } from 'react'\r\nimport { Link, useLocation} from 'react-router-dom'\r\n\r\nimport Menu from '../commons/icons/Menu'\r\n\r\nimport './AppHeader.scss'\r\n\r\ninterface AppHeaderLink {\r\n  to: string,\r\n  text: string\r\n}\r\n\r\ninterface AppHeaderProps {\r\n  links: AppHeaderLink[]\r\n}\r\n\r\nconst AppHeader = (props: AppHeaderProps) => {\r\n  const [showMenu, setShowMenu] = useState(false)\r\n\r\n  const toggleMenuOff = () => {\r\n    document.body.removeEventListener('click', toggleMenuOff)\r\n    setShowMenu(false)\r\n  }\r\n\r\n  const onMenuPressed = () => {\r\n    document.body.removeEventListener('click', toggleMenuOff)\r\n    if (!showMenu) {\r\n      document.body.addEventListener('click', toggleMenuOff)\r\n      setShowMenu(true)\r\n    }\r\n  }\r\n  return (\r\n    <header\r\n      className='AppHeader'>\r\n      <div\r\n        className='AppHeader-item'>\r\n        <Link\r\n          className='AppHeader-link'\r\n          to='/'>\r\n          Sustainable Systems\r\n        </Link>\r\n      </div>\r\n      <div\r\n        className='AppHeader-links'>\r\n        { props.links.map((link) => <AppHeaderLink key={link.to} {...link} />) }\r\n      </div>\r\n      <div className='AppHeader-menu-btn-container'>\r\n        <button\r\n          className='AppHeader-menu-btn'\r\n          onClick={onMenuPressed}>\r\n          <Menu />\r\n        </button>\r\n        <div className={showMenu ? 'AppHeader-menu-btn-mask' : ''} />\r\n      </div>\r\n      <div\r\n        className={showMenu ? 'AppHeader-menu AppHeader-menu-show' : 'AppHeader-menu'}>\r\n        <ul\r\n          className='AppHeader-menu-list'>\r\n          { props.links.map((link) => <AppHeaderMenuLink key={link.to} {...link} />) }\r\n        </ul>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nfunction AppHeaderLink(props: AppHeaderLink) {\r\n  const {\r\n    to,\r\n    text\r\n  } = props\r\n  let className = 'AppHeader-link'\r\n  const location = useLocation()\r\n  if (location.pathname === to) {\r\n    className += ' AppHeader-link-active'\r\n  }\r\n  return (\r\n    <div\r\n      key={to}\r\n      className='AppHeader-item'>\r\n      <Link\r\n        className={className}\r\n        to={to}>\r\n        {text}\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction AppHeaderMenuLink(props: AppHeaderLink) {\r\n  const {\r\n    to,\r\n    text\r\n  } = props\r\n  let className = 'AppHeader-menu-link'\r\n  const location = useLocation()\r\n  if (location.pathname === to) {\r\n    className += ' AppHeader-menu-link-active'\r\n  }\r\n  return (\r\n    <li\r\n      key={to}\r\n      className='AppHeader-menu-item'>\r\n      <Link\r\n        className={className}\r\n        to={to}>\r\n        {text}\r\n      </Link>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default AppHeader\r\n","import React from 'react'\r\nimport './Arrow.scss'\r\n\r\ninterface ArrowProps {}\r\ninterface ArrowState {}\r\n\r\nconst Arrow = (props: ArrowProps) => {\r\n  return (\r\n    <div className='Arrow'>\r\n      <div className='Arrow-elem Arrow-main' />\r\n      <div className='Arrow-elem Arrow-ext1' />\r\n      <div className='Arrow-elem Arrow-ext2' />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Arrow\r\n","import React from 'react'\r\n\r\nimport Arrow from '../../commons/icons/Arrow'\r\nimport './Home.scss'\r\n\r\ninterface HomeProps {}\r\n\r\ninterface HomePageBackground {\r\n  src: string\r\n}\r\n\r\nconst Home = (props: HomeProps) => {\r\n  return (\r\n    <div className='Home'>\r\n\r\n      <div className='Home-page'>\r\n        <div className='Home-page-content'>\r\n          <HomePageBackground src='https://github.com/bullepouzoulet/bullepouzoulet.github.io/blob/master/background.jpg?raw=true' />\r\n          <h1>Sustainable <br /> Systems</h1>\r\n          <h2>Let's walk together towards a sustainable future</h2>\r\n          <h3>Site under construction - release planned 01/2020</h3>\r\n          <div className='Home-page-bottom'>\r\n            <Arrow />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='Home-page Home-page-small'>\r\n        <div className='Home-page-content'>\r\n          <h2>Vision / Approche / Mission</h2>\r\n          <p>Besoin d'une personne compétente et qualifiée pour vous accompagner dans la réalisation de votre projet ? Vous avez frappé à la bonne porte. Mon travail consiste à comprendre vos objectifs et à trouver la solution adaptée à vos besoins. Contactez-moi ! </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='Home-page Home-page-small'>\r\n        <div className='Home-page-content'>\r\n          <HomePageBackground src='https://github.com/bullepouzoulet/bullepouzoulet.github.io/blob/master/background2.jpg?raw=true' />\r\n          <h2>Mes Services</h2>\r\n          <p>Je suis passionné par mon travail et cela n'est un secret pour personne. Ma plus grande satisfaction ? Pouvoir aider mes clients à réussir. Vous trouverez ici toutes les informations sur mes prestations et la façon dont je peux vous accompagner.</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='Home-page Home-page-small'>\r\n        <div className='Home-page-content'>\r\n          <h2>Portfolio</h2>\r\n          <p>Quand vous croyez en ce que vous faites, tout est possible.  Si vous souhaitez avoir une idée de mes compétences, voici quelques exemples concrets de résultats que vous pouvez espérer atteindre en collaborant avec moi.</p>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction HomePageBackground(props: HomePageBackground) {\r\n  const {\r\n    src\r\n  } = props\r\n  return (\r\n    <div\r\n      className='Home-page-background-container'>\r\n      <img\r\n        className='Home-page-background'\r\n        alt=''\r\n        src={src} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\nimport './Services.scss'\r\n\r\ninterface ServicesProps {}\r\n\r\nconst Services = (props: ServicesProps) => {\r\n  return (\r\n    <div className='Services'>\r\n      <h1>Services</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Services\r\n","import React from 'react'\r\n\r\nimport './Projects.scss'\r\n\r\ninterface ProjectsProps {}\r\n\r\nconst Projects = (props: ProjectsProps) => {\r\n  return (\r\n    <div className='Projects'>\r\n      <h1>Projects</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Projects\r\n","import React, { useState } from 'react'\r\n\r\nimport './Contact.scss'\r\n\r\ninterface ContactProps {}\r\n\r\nconst Contact = (props: ContactProps) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [message, setMessage] = useState('')\r\n  const [isSent, setIsSent] = useState(false)\r\n\r\n  const handleNameChanged = (event: React.FormEvent<HTMLInputElement>) => {\r\n    setName(event.currentTarget.value)\r\n  }\r\n\r\n  const handleEmailChanged = (event: React.FormEvent<HTMLInputElement>) => {\r\n    setEmail(event.currentTarget.value)\r\n  }\r\n\r\n  const handleMessageChanged = (event: React.FormEvent<HTMLTextAreaElement>) => {\r\n    setMessage(event.currentTarget.value)\r\n  }\r\n\r\n  const submitDisabled = !Boolean(name.trim()) || !Boolean(email.trim()) || !Boolean(message.trim())\r\n  return (\r\n    <div className='Contact'>\r\n      <h3\r\n        className='Contact-title'>\r\n        Vous voulez en savoir plus ?\r\n      </h3>\r\n\r\n      <div\r\n        className='Contact-content'>\r\n\r\n        <ContactInput\r\n          id='name'\r\n          type='text'\r\n          text='Votre nom'\r\n          value={name}\r\n          onChange={handleNameChanged}\r\n        />\r\n\r\n        <ContactInput\r\n          id='email'\r\n          type='email'\r\n          text='Votre adresse email'\r\n          value={email}\r\n          onChange={handleEmailChanged}\r\n        />\r\n\r\n        <ContactTextArea\r\n          id='message'\r\n          text='Votre message'\r\n          value={message}\r\n          onChange={handleMessageChanged}\r\n        />\r\n\r\n      </div>\r\n\r\n      <button\r\n        className='Contact-btn'\r\n        disabled={submitDisabled}>\r\n        Envoyer\r\n      </button>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface ContactInputProps {\r\n  type: string,\r\n  value: string,\r\n  text: string,\r\n  id: string,\r\n  onChange: (event: React.FormEvent<HTMLInputElement>) => void\r\n}\r\n\r\nfunction ContactInput(props: ContactInputProps) {\r\n  const {\r\n    id,\r\n    type,\r\n    text,\r\n    value,\r\n    onChange\r\n  } = props\r\n  return (\r\n    <div\r\n      className='Contact-form'>\r\n      <label\r\n        className='Contact-label'\r\n        htmlFor={id}>\r\n        {text}\r\n      </label>\r\n      <input\r\n        className='Contact-input'\r\n        type={type}\r\n        id={id}\r\n        name={id}\r\n        value={value}\r\n        onChange={onChange}\r\n        required>\r\n      </input>\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface ContactTextAreaProps {\r\n  value: string,\r\n  text: string,\r\n  id: string,\r\n  onChange: (event: React.FormEvent<HTMLTextAreaElement>) => void\r\n}\r\n\r\nfunction ContactTextArea(props: ContactTextAreaProps) {\r\n  const {\r\n    id,\r\n    text,\r\n    value,\r\n    onChange\r\n  } = props\r\n  return (\r\n    <div\r\n      className='Contact-form'>\r\n      <label\r\n        className='Contact-label'\r\n        htmlFor={id}>\r\n        {text}\r\n      </label>\r\n      <textarea\r\n        className='Contact-textarea'\r\n        id={id}\r\n        name={id}\r\n        value={value}\r\n        onChange={onChange}\r\n        rows={5}\r\n        required>\r\n      </textarea>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Contact\r\n","import React from 'react'\r\nimport {\r\n  Switch,\r\n  Route\r\n} from 'react-router-dom'\r\n\r\nimport Home from './home/Home'\r\nimport Services from './services/Services'\r\nimport Projects from './projects/Projects'\r\nimport Contact from './contact/Contact'\r\n\r\nimport './AppContent.scss'\r\n\r\ninterface AppContentProps {}\r\ninterface AppContentState {}\r\n\r\nconst AppContent = (props: AppContentProps) => {\r\n  return (\r\n    <div className='AppContent'>\r\n      <Switch>\r\n        <Route path='/services'>\r\n          <Services />\r\n        </Route>\r\n        <Route path='/projects'>\r\n          <Projects />\r\n        </Route>\r\n        <Route path='/contact'>\r\n          <Contact />\r\n        </Route>\r\n        <Route path='/'>\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n      <div>Common Footer</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppContent\r\n","import React from 'react'\nimport {\n  HashRouter as Router\n} from 'react-router-dom'\n\nimport AppHeader from './AppHeader'\nimport AppContent from './AppContent'\n\nimport './App.scss'\n\ninterface AppProps {}\n\nconst links = [\n  { to: '/', text: 'Home' },\n  { to: '/services', text: 'Services' },\n  { to: '/projects', text: 'Projects' },\n  { to: '/contact', text: 'Contact' }\n]\n\nconst App = (props: AppProps) => {\n  return (\n    <Router>\n      <div className='App'>\n        <AppHeader links={links} />\n        <AppContent />\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","/* globals fetch */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}